// Code generated by protoc-gen-go. DO NOT EDIT.
// source: agent.proto

/*
Package msg is a generated protocol buffer package.

It is generated from these files:
	agent.proto

It has these top-level messages:
	Packet
	Hello
	Probe
	ActionConfig
	Result
*/
package msg

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Packet_Sender int32

const (
	Packet_AGENT      Packet_Sender = 0
	Packet_CONTROLLER Packet_Sender = 1
)

var Packet_Sender_name = map[int32]string{
	0: "AGENT",
	1: "CONTROLLER",
}
var Packet_Sender_value = map[string]int32{
	"AGENT":      0,
	"CONTROLLER": 1,
}

func (x Packet_Sender) String() string {
	return proto.EnumName(Packet_Sender_name, int32(x))
}
func (Packet_Sender) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 0} }

type Packet_Type int32

const (
	Packet_HELLO        Packet_Type = 0
	Packet_PROBE        Packet_Type = 1
	Packet_PROBE_RESULT Packet_Type = 2
)

var Packet_Type_name = map[int32]string{
	0: "HELLO",
	1: "PROBE",
	2: "PROBE_RESULT",
}
var Packet_Type_value = map[string]int32{
	"HELLO":        0,
	"PROBE":        1,
	"PROBE_RESULT": 2,
}

func (x Packet_Type) String() string {
	return proto.EnumName(Packet_Type_name, int32(x))
}
func (Packet_Type) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 1} }

type Probe_Action int32

const (
	Probe_DEACTIVATE Probe_Action = 0
	Probe_ACTIVATE   Probe_Action = 1
	Probe_RUN_ONCE   Probe_Action = 2
	Probe_DELETE     Probe_Action = 3
)

var Probe_Action_name = map[int32]string{
	0: "DEACTIVATE",
	1: "ACTIVATE",
	2: "RUN_ONCE",
	3: "DELETE",
}
var Probe_Action_value = map[string]int32{
	"DEACTIVATE": 0,
	"ACTIVATE":   1,
	"RUN_ONCE":   2,
	"DELETE":     3,
}

func (x Probe_Action) String() string {
	return proto.EnumName(Probe_Action_name, int32(x))
}
func (Probe_Action) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{2, 0} }

type Packet struct {
	Sender       Packet_Sender `protobuf:"varint,1,opt,name=sender,enum=msg.Packet_Sender" json:"sender,omitempty"`
	Type         Packet_Type   `protobuf:"varint,2,opt,name=type,enum=msg.Packet_Type" json:"type,omitempty"`
	ErrorCode    int32         `protobuf:"varint,3,opt,name=error_code,json=errorCode" json:"error_code,omitempty"`
	ErrorMessage string        `protobuf:"bytes,4,opt,name=error_message,json=errorMessage" json:"error_message,omitempty"`
	// Types that are valid to be assigned to Packet:
	//	*Packet_Hello
	//	*Packet_Probe
	//	*Packet_Result
	Packet isPacket_Packet `protobuf_oneof:"packet"`
}

func (m *Packet) Reset()                    { *m = Packet{} }
func (m *Packet) String() string            { return proto.CompactTextString(m) }
func (*Packet) ProtoMessage()               {}
func (*Packet) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type isPacket_Packet interface {
	isPacket_Packet()
}

type Packet_Hello struct {
	Hello *Hello `protobuf:"bytes,5,opt,name=hello,oneof"`
}
type Packet_Probe struct {
	Probe *Probe `protobuf:"bytes,6,opt,name=probe,oneof"`
}
type Packet_Result struct {
	Result *Result `protobuf:"bytes,7,opt,name=result,oneof"`
}

func (*Packet_Hello) isPacket_Packet()  {}
func (*Packet_Probe) isPacket_Packet()  {}
func (*Packet_Result) isPacket_Packet() {}

func (m *Packet) GetPacket() isPacket_Packet {
	if m != nil {
		return m.Packet
	}
	return nil
}

func (m *Packet) GetSender() Packet_Sender {
	if m != nil {
		return m.Sender
	}
	return Packet_AGENT
}

func (m *Packet) GetType() Packet_Type {
	if m != nil {
		return m.Type
	}
	return Packet_HELLO
}

func (m *Packet) GetErrorCode() int32 {
	if m != nil {
		return m.ErrorCode
	}
	return 0
}

func (m *Packet) GetErrorMessage() string {
	if m != nil {
		return m.ErrorMessage
	}
	return ""
}

func (m *Packet) GetHello() *Hello {
	if x, ok := m.GetPacket().(*Packet_Hello); ok {
		return x.Hello
	}
	return nil
}

func (m *Packet) GetProbe() *Probe {
	if x, ok := m.GetPacket().(*Packet_Probe); ok {
		return x.Probe
	}
	return nil
}

func (m *Packet) GetResult() *Result {
	if x, ok := m.GetPacket().(*Packet_Result); ok {
		return x.Result
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Packet) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Packet_OneofMarshaler, _Packet_OneofUnmarshaler, _Packet_OneofSizer, []interface{}{
		(*Packet_Hello)(nil),
		(*Packet_Probe)(nil),
		(*Packet_Result)(nil),
	}
}

func _Packet_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Packet)
	// packet
	switch x := m.Packet.(type) {
	case *Packet_Hello:
		b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Hello); err != nil {
			return err
		}
	case *Packet_Probe:
		b.EncodeVarint(6<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Probe); err != nil {
			return err
		}
	case *Packet_Result:
		b.EncodeVarint(7<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Result); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Packet.Packet has unexpected type %T", x)
	}
	return nil
}

func _Packet_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Packet)
	switch tag {
	case 5: // packet.hello
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Hello)
		err := b.DecodeMessage(msg)
		m.Packet = &Packet_Hello{msg}
		return true, err
	case 6: // packet.probe
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Probe)
		err := b.DecodeMessage(msg)
		m.Packet = &Packet_Probe{msg}
		return true, err
	case 7: // packet.result
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Result)
		err := b.DecodeMessage(msg)
		m.Packet = &Packet_Result{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Packet_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Packet)
	// packet
	switch x := m.Packet.(type) {
	case *Packet_Hello:
		s := proto.Size(x.Hello)
		n += proto.SizeVarint(5<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Packet_Probe:
		s := proto.Size(x.Probe)
		n += proto.SizeVarint(6<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Packet_Result:
		s := proto.Size(x.Result)
		n += proto.SizeVarint(7<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type Hello struct {
	Username string `protobuf:"bytes,1,opt,name=username" json:"username,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=password" json:"password,omitempty"`
}

func (m *Hello) Reset()                    { *m = Hello{} }
func (m *Hello) String() string            { return proto.CompactTextString(m) }
func (*Hello) ProtoMessage()               {}
func (*Hello) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Hello) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *Hello) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type Probe struct {
	Action   Probe_Action  `protobuf:"varint,1,opt,name=action,enum=msg.Probe_Action" json:"action,omitempty"`
	Config   *ActionConfig `protobuf:"bytes,2,opt,name=config" json:"config,omitempty"`
	Schedule string        `protobuf:"bytes,3,opt,name=schedule" json:"schedule,omitempty"`
}

func (m *Probe) Reset()                    { *m = Probe{} }
func (m *Probe) String() string            { return proto.CompactTextString(m) }
func (*Probe) ProtoMessage()               {}
func (*Probe) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Probe) GetAction() Probe_Action {
	if m != nil {
		return m.Action
	}
	return Probe_DEACTIVATE
}

func (m *Probe) GetConfig() *ActionConfig {
	if m != nil {
		return m.Config
	}
	return nil
}

func (m *Probe) GetSchedule() string {
	if m != nil {
		return m.Schedule
	}
	return ""
}

type ActionConfig struct {
	Id         string            `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Action     int32             `protobuf:"varint,2,opt,name=action" json:"action,omitempty"`
	Parameters map[string]string `protobuf:"bytes,3,rep,name=parameters" json:"parameters,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *ActionConfig) Reset()                    { *m = ActionConfig{} }
func (m *ActionConfig) String() string            { return proto.CompactTextString(m) }
func (*ActionConfig) ProtoMessage()               {}
func (*ActionConfig) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *ActionConfig) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ActionConfig) GetAction() int32 {
	if m != nil {
		return m.Action
	}
	return 0
}

func (m *ActionConfig) GetParameters() map[string]string {
	if m != nil {
		return m.Parameters
	}
	return nil
}

type Result struct {
	Id        string            `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	ConfigId  string            `protobuf:"bytes,2,opt,name=configId" json:"configId,omitempty"`
	DataCode  int32             `protobuf:"varint,3,opt,name=dataCode" json:"dataCode,omitempty"`
	Data      []byte            `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	Tags      map[string]string `protobuf:"bytes,5,rep,name=tags" json:"tags,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Timestamp int64             `protobuf:"varint,6,opt,name=timestamp" json:"timestamp,omitempty"`
}

func (m *Result) Reset()                    { *m = Result{} }
func (m *Result) String() string            { return proto.CompactTextString(m) }
func (*Result) ProtoMessage()               {}
func (*Result) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *Result) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Result) GetConfigId() string {
	if m != nil {
		return m.ConfigId
	}
	return ""
}

func (m *Result) GetDataCode() int32 {
	if m != nil {
		return m.DataCode
	}
	return 0
}

func (m *Result) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *Result) GetTags() map[string]string {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *Result) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func init() {
	proto.RegisterType((*Packet)(nil), "msg.Packet")
	proto.RegisterType((*Hello)(nil), "msg.Hello")
	proto.RegisterType((*Probe)(nil), "msg.Probe")
	proto.RegisterType((*ActionConfig)(nil), "msg.ActionConfig")
	proto.RegisterType((*Result)(nil), "msg.Result")
	proto.RegisterEnum("msg.Packet_Sender", Packet_Sender_name, Packet_Sender_value)
	proto.RegisterEnum("msg.Packet_Type", Packet_Type_name, Packet_Type_value)
	proto.RegisterEnum("msg.Probe_Action", Probe_Action_name, Probe_Action_value)
}

func init() { proto.RegisterFile("agent.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 596 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x94, 0xc1, 0x6e, 0xd3, 0x4c,
	0x10, 0xc7, 0x63, 0x3b, 0xf6, 0x17, 0x4f, 0xf2, 0x15, 0xb3, 0x02, 0x64, 0x45, 0x20, 0x05, 0x17,
	0xa4, 0x94, 0x83, 0x0f, 0xe5, 0x00, 0x42, 0x42, 0x90, 0xa6, 0x2b, 0x52, 0x29, 0x24, 0xd1, 0xd6,
	0xe5, 0x5a, 0x6d, 0xe3, 0xc5, 0x8d, 0x1a, 0xc7, 0xd6, 0xee, 0x06, 0x94, 0x37, 0x43, 0xe2, 0x7d,
	0x38, 0xf1, 0x10, 0x68, 0xc7, 0xae, 0x1b, 0xd1, 0x13, 0xb7, 0x99, 0xf9, 0xff, 0x36, 0xb3, 0xff,
	0xd9, 0x89, 0xa1, 0xcb, 0x33, 0xb1, 0xd1, 0x71, 0x29, 0x0b, 0x5d, 0x10, 0x27, 0x57, 0x59, 0xf4,
	0xdb, 0x06, 0x6f, 0xc1, 0x97, 0x37, 0x42, 0x93, 0x57, 0xe0, 0x29, 0xb1, 0x49, 0x85, 0x0c, 0xad,
	0x81, 0x35, 0x3c, 0x38, 0x26, 0x71, 0xae, 0xb2, 0xb8, 0x12, 0xe3, 0x73, 0x54, 0x58, 0x4d, 0x90,
	0x17, 0xd0, 0xd6, 0xbb, 0x52, 0x84, 0x36, 0x92, 0xc1, 0x3e, 0x99, 0xec, 0x4a, 0xc1, 0x50, 0x25,
	0xcf, 0x00, 0x84, 0x94, 0x85, 0xbc, 0x5c, 0x16, 0xa9, 0x08, 0x9d, 0x81, 0x35, 0x74, 0x99, 0x8f,
	0x95, 0x71, 0x91, 0x0a, 0x72, 0x08, 0xff, 0x57, 0x72, 0x2e, 0x94, 0xe2, 0x99, 0x08, 0xdb, 0x03,
	0x6b, 0xe8, 0xb3, 0x1e, 0x16, 0x3f, 0x57, 0x35, 0x12, 0x81, 0x7b, 0x2d, 0xd6, 0xeb, 0x22, 0x74,
	0x07, 0xd6, 0xb0, 0x7b, 0x0c, 0xd8, 0x6a, 0x62, 0x2a, 0x93, 0x16, 0xab, 0x24, 0xc3, 0x94, 0xb2,
	0xb8, 0x12, 0xa1, 0xb7, 0xc7, 0x2c, 0x4c, 0xc5, 0x30, 0x28, 0x91, 0x97, 0xe0, 0x49, 0xa1, 0xb6,
	0x6b, 0x1d, 0xfe, 0x87, 0x50, 0x17, 0x21, 0x86, 0xa5, 0x49, 0x8b, 0xd5, 0x62, 0x74, 0x08, 0x5e,
	0x65, 0x95, 0xf8, 0xe0, 0x8e, 0x3e, 0xd1, 0x59, 0x12, 0xb4, 0xc8, 0x01, 0xc0, 0x78, 0x3e, 0x4b,
	0xd8, 0x7c, 0x3a, 0xa5, 0x2c, 0xb0, 0xa2, 0x18, 0xda, 0xc6, 0xa5, 0x41, 0x26, 0x74, 0x3a, 0x9d,
	0x07, 0x2d, 0x13, 0x2e, 0xd8, 0xfc, 0x84, 0x06, 0x16, 0x09, 0xa0, 0x87, 0xe1, 0x25, 0xa3, 0xe7,
	0x17, 0xd3, 0x24, 0xb0, 0x4f, 0x3a, 0xe0, 0x95, 0x38, 0x9c, 0xe8, 0x03, 0xb8, 0x78, 0x77, 0xd2,
	0x87, 0xce, 0x56, 0x09, 0xb9, 0xe1, 0xb9, 0xc0, 0x71, 0xfb, 0xac, 0xc9, 0x8d, 0x56, 0x72, 0xa5,
	0xbe, 0x17, 0x32, 0xc5, 0x01, 0xfb, 0xac, 0xc9, 0xa3, 0x9f, 0x16, 0xb8, 0xe8, 0x8c, 0x1c, 0x81,
	0xc7, 0x97, 0x7a, 0x55, 0x6c, 0xea, 0xe7, 0x7a, 0x78, 0xe7, 0x3a, 0x1e, 0xa1, 0xc0, 0x6a, 0xc0,
	0xa0, 0xcb, 0x62, 0xf3, 0x75, 0x95, 0xe1, 0xcf, 0x75, 0x6b, 0xb4, 0x82, 0xc6, 0x28, 0xb0, 0x1a,
	0x30, 0xbd, 0xd5, 0xf2, 0x5a, 0xa4, 0xdb, 0x75, 0xf5, 0x60, 0x3e, 0x6b, 0xf2, 0xe8, 0x23, 0x78,
	0xd5, 0x19, 0x33, 0x90, 0x53, 0x3a, 0x1a, 0x27, 0x67, 0x5f, 0x46, 0x09, 0x0d, 0x5a, 0xa4, 0x07,
	0x9d, 0x26, 0xb3, 0x4c, 0xc6, 0x2e, 0x66, 0x97, 0xf3, 0xd9, 0x98, 0x06, 0x36, 0x01, 0xf0, 0x4e,
	0xe9, 0x94, 0x26, 0x34, 0x70, 0xa2, 0x1f, 0x16, 0xf4, 0xf6, 0xdb, 0x92, 0x03, 0xb0, 0x57, 0x69,
	0x3d, 0x00, 0x7b, 0x95, 0x92, 0x27, 0x8d, 0x29, 0x1b, 0xb7, 0xe5, 0xd6, 0xc1, 0x08, 0xa0, 0xe4,
	0x92, 0xe7, 0x42, 0x0b, 0xa9, 0x42, 0x67, 0xe0, 0x0c, 0xbb, 0xc7, 0xcf, 0xef, 0xb9, 0x88, 0x17,
	0x0d, 0x43, 0x37, 0x5a, 0xee, 0xd8, 0xde, 0xa1, 0xfe, 0x7b, 0x78, 0xf0, 0x97, 0x4c, 0x02, 0x70,
	0x6e, 0xc4, 0xae, 0x6e, 0x6f, 0x42, 0xf2, 0x08, 0xdc, 0x6f, 0x7c, 0xbd, 0x15, 0xf5, 0xdc, 0xab,
	0xe4, 0x9d, 0xfd, 0xd6, 0x8a, 0x7e, 0x59, 0xe0, 0x55, 0xdb, 0x72, 0xef, 0xd2, 0x7d, 0xe8, 0x54,
	0xd3, 0x3b, 0x6b, 0xde, 0xeb, 0x36, 0x37, 0x5a, 0xca, 0x35, 0x1f, 0xdf, 0xfd, 0x01, 0x9a, 0x9c,
	0x10, 0x68, 0x9b, 0x18, 0xd7, 0xbe, 0xc7, 0x30, 0x26, 0x47, 0xd0, 0xd6, 0x3c, 0x53, 0xa1, 0x8b,
	0x16, 0x1f, 0xef, 0x2d, 0x69, 0x9c, 0xf0, 0xac, 0xb6, 0x85, 0x08, 0x79, 0x0a, 0xbe, 0x5e, 0xe5,
	0x42, 0x69, 0x9e, 0x97, 0xb8, 0xf9, 0x0e, 0xbb, 0x2b, 0xf4, 0xdf, 0x80, 0xdf, 0x1c, 0xf8, 0x17,
	0xa3, 0x57, 0x1e, 0x7e, 0x1d, 0x5e, 0xff, 0x09, 0x00, 0x00, 0xff, 0xff, 0x93, 0xad, 0xcd, 0xbb,
	0x2c, 0x04, 0x00, 0x00,
}
