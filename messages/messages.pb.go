// Code generated by protoc-gen-go. DO NOT EDIT.
// source: messages.proto

/*
Package messages is a generated protocol buffer package.

It is generated from these files:
	messages.proto

It has these top-level messages:
	ProbeACK
	ProbeResult
	ProbeCommand
*/
package messages

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ProbeACK_Type int32

const (
	ProbeACK_HELLO  ProbeACK_Type = 0
	ProbeACK_RESULT ProbeACK_Type = 1
)

var ProbeACK_Type_name = map[int32]string{
	0: "HELLO",
	1: "RESULT",
}
var ProbeACK_Type_value = map[string]int32{
	"HELLO":  0,
	"RESULT": 1,
}

func (x ProbeACK_Type) String() string {
	return proto.EnumName(ProbeACK_Type_name, int32(x))
}
func (ProbeACK_Type) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 0} }

type ProbeCommand_Type int32

const (
	ProbeCommand_TCP  ProbeCommand_Type = 0
	ProbeCommand_ICMP ProbeCommand_Type = 1
)

var ProbeCommand_Type_name = map[int32]string{
	0: "TCP",
	1: "ICMP",
}
var ProbeCommand_Type_value = map[string]int32{
	"TCP":  0,
	"ICMP": 1,
}

func (x ProbeCommand_Type) String() string {
	return proto.EnumName(ProbeCommand_Type_name, int32(x))
}
func (ProbeCommand_Type) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{2, 0} }

type ProbeACK struct {
	Type   ProbeACK_Type `protobuf:"varint,1,opt,name=type,enum=messages.ProbeACK_Type" json:"type,omitempty"`
	Id     string        `protobuf:"bytes,2,opt,name=id" json:"id,omitempty"`
	Auth   string        `protobuf:"bytes,3,opt,name=auth" json:"auth,omitempty"`
	Label  string        `protobuf:"bytes,4,opt,name=label" json:"label,omitempty"`
	Result *ProbeResult  `protobuf:"bytes,5,opt,name=result" json:"result,omitempty"`
}

func (m *ProbeACK) Reset()                    { *m = ProbeACK{} }
func (m *ProbeACK) String() string            { return proto.CompactTextString(m) }
func (*ProbeACK) ProtoMessage()               {}
func (*ProbeACK) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *ProbeACK) GetType() ProbeACK_Type {
	if m != nil {
		return m.Type
	}
	return ProbeACK_HELLO
}

func (m *ProbeACK) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ProbeACK) GetAuth() string {
	if m != nil {
		return m.Auth
	}
	return ""
}

func (m *ProbeACK) GetLabel() string {
	if m != nil {
		return m.Label
	}
	return ""
}

func (m *ProbeACK) GetResult() *ProbeResult {
	if m != nil {
		return m.Result
	}
	return nil
}

type ProbeResult struct {
	Host      string `protobuf:"bytes,1,opt,name=host" json:"host,omitempty"`
	ProbeId   string `protobuf:"bytes,2,opt,name=probeId" json:"probeId,omitempty"`
	Datapoint int64  `protobuf:"varint,3,opt,name=datapoint" json:"datapoint,omitempty"`
}

func (m *ProbeResult) Reset()                    { *m = ProbeResult{} }
func (m *ProbeResult) String() string            { return proto.CompactTextString(m) }
func (*ProbeResult) ProtoMessage()               {}
func (*ProbeResult) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *ProbeResult) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

func (m *ProbeResult) GetProbeId() string {
	if m != nil {
		return m.ProbeId
	}
	return ""
}

func (m *ProbeResult) GetDatapoint() int64 {
	if m != nil {
		return m.Datapoint
	}
	return 0
}

type ProbeCommand struct {
	Host       string            `protobuf:"bytes,1,opt,name=host" json:"host,omitempty"`
	Type       ProbeCommand_Type `protobuf:"varint,2,opt,name=type,enum=messages.ProbeCommand_Type" json:"type,omitempty"`
	ReportHost string            `protobuf:"bytes,3,opt,name=reportHost" json:"reportHost,omitempty"`
}

func (m *ProbeCommand) Reset()                    { *m = ProbeCommand{} }
func (m *ProbeCommand) String() string            { return proto.CompactTextString(m) }
func (*ProbeCommand) ProtoMessage()               {}
func (*ProbeCommand) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *ProbeCommand) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

func (m *ProbeCommand) GetType() ProbeCommand_Type {
	if m != nil {
		return m.Type
	}
	return ProbeCommand_TCP
}

func (m *ProbeCommand) GetReportHost() string {
	if m != nil {
		return m.ReportHost
	}
	return ""
}

func init() {
	proto.RegisterType((*ProbeACK)(nil), "messages.ProbeACK")
	proto.RegisterType((*ProbeResult)(nil), "messages.ProbeResult")
	proto.RegisterType((*ProbeCommand)(nil), "messages.ProbeCommand")
	proto.RegisterEnum("messages.ProbeACK_Type", ProbeACK_Type_name, ProbeACK_Type_value)
	proto.RegisterEnum("messages.ProbeCommand_Type", ProbeCommand_Type_name, ProbeCommand_Type_value)
}

func init() { proto.RegisterFile("messages.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 302 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x51, 0xdd, 0x4a, 0xf3, 0x40,
	0x10, 0xed, 0xa6, 0xe9, 0x4f, 0xa6, 0x1f, 0x25, 0x0c, 0x9f, 0xb8, 0xe2, 0x0f, 0x25, 0x57, 0x01,
	0x31, 0x42, 0x7d, 0x02, 0x09, 0x85, 0x16, 0x23, 0x86, 0x35, 0x5e, 0x78, 0xb9, 0x21, 0x8b, 0x0d,
	0x24, 0xdd, 0x25, 0xd9, 0x5e, 0xf4, 0x25, 0x7c, 0x25, 0x5f, 0x4d, 0xb2, 0x4d, 0x34, 0x14, 0xef,
	0x66, 0xce, 0x9e, 0x99, 0x39, 0xe7, 0x2c, 0xcc, 0x4b, 0x51, 0xd7, 0xfc, 0x43, 0xd4, 0x81, 0xaa,
	0xa4, 0x96, 0x38, 0xed, 0x7a, 0xef, 0x8b, 0xc0, 0x34, 0xae, 0x64, 0x2a, 0x1e, 0xc3, 0x27, 0xbc,
	0x05, 0x5b, 0x1f, 0x94, 0xa0, 0x64, 0x41, 0xfc, 0xf9, 0xf2, 0x3c, 0xf8, 0x99, 0xea, 0x18, 0x41,
	0x72, 0x50, 0x82, 0x19, 0x12, 0xce, 0xc1, 0xca, 0x33, 0x6a, 0x2d, 0x88, 0xef, 0x30, 0x2b, 0xcf,
	0x10, 0xc1, 0xe6, 0x7b, 0xbd, 0xa5, 0x43, 0x83, 0x98, 0x1a, 0xff, 0xc3, 0xa8, 0xe0, 0xa9, 0x28,
	0xa8, 0x6d, 0xc0, 0x63, 0x83, 0x77, 0x30, 0xae, 0x44, 0xbd, 0x2f, 0x34, 0x1d, 0x2d, 0x88, 0x3f,
	0x5b, 0x9e, 0x9d, 0x1c, 0x62, 0xe6, 0x91, 0xb5, 0x24, 0xef, 0x1a, 0xec, 0xe6, 0x2c, 0x3a, 0x30,
	0x5a, 0xaf, 0xa2, 0xe8, 0xc5, 0x1d, 0x20, 0xc0, 0x98, 0xad, 0x5e, 0xdf, 0xa2, 0xc4, 0x25, 0xde,
	0x3b, 0xcc, 0x7a, 0x53, 0x8d, 0x8c, 0xad, 0xac, 0xb5, 0xf1, 0xe0, 0x30, 0x53, 0x23, 0x85, 0x89,
	0x6a, 0x28, 0x9b, 0x4e, 0x6f, 0xd7, 0xe2, 0x15, 0x38, 0x19, 0xd7, 0x5c, 0xc9, 0x7c, 0xa7, 0x8d,
	0xf2, 0x21, 0xfb, 0x05, 0xbc, 0x4f, 0x02, 0xff, 0xcc, 0xee, 0x50, 0x96, 0x25, 0xdf, 0x65, 0x7f,
	0x2e, 0xbf, 0x6f, 0x43, 0xb3, 0x4c, 0x68, 0x97, 0x27, 0x5e, 0xda, 0xc9, 0x7e, 0x70, 0x37, 0x00,
	0x95, 0x50, 0xb2, 0xd2, 0xeb, 0x66, 0xd5, 0x31, 0xae, 0x1e, 0xe2, 0x5d, 0xb4, 0x7e, 0x27, 0x30,
	0x4c, 0xc2, 0xd8, 0x1d, 0xe0, 0x14, 0xec, 0x4d, 0xf8, 0x1c, 0xbb, 0x24, 0x1d, 0x9b, 0xef, 0x7b,
	0xf8, 0x0e, 0x00, 0x00, 0xff, 0xff, 0x03, 0x55, 0xf0, 0x30, 0xd0, 0x01, 0x00, 0x00,
}
