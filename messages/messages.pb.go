// Code generated by protoc-gen-go. DO NOT EDIT.
// source: messages.proto

/*
Package messages is a generated protocol buffer package.

It is generated from these files:
	messages.proto

It has these top-level messages:
	Empty
	ControllerInfoResponse
	AgentRequest
	AgentResponse
	ProbeRequest
	ProbeResponse
	CreateResultQueueRequest
	CreateResultQueueResponse
	ScheduleProbeRequest
	ScheduleProbeResponse
	ResultQueueConfig
	AgentMessage
	AgentInfo
	AgentProbeResult
	ControllerMessage
	LatencyRequest
	ProbeSchedule
*/
package messages

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type AgentMessage_Type int32

const (
	AgentMessage_HELLO  AgentMessage_Type = 0
	AgentMessage_RESULT AgentMessage_Type = 1
	AgentMessage_INFO   AgentMessage_Type = 2
)

var AgentMessage_Type_name = map[int32]string{
	0: "HELLO",
	1: "RESULT",
	2: "INFO",
}
var AgentMessage_Type_value = map[string]int32{
	"HELLO":  0,
	"RESULT": 1,
	"INFO":   2,
}

func (x AgentMessage_Type) String() string {
	return proto.EnumName(AgentMessage_Type_name, int32(x))
}
func (AgentMessage_Type) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{11, 0} }

type AgentProbeResult_Type int32

const (
	AgentProbeResult_TCP        AgentProbeResult_Type = 0
	AgentProbeResult_ICMP       AgentProbeResult_Type = 1
	AgentProbeResult_TRACEROUTE AgentProbeResult_Type = 2
)

var AgentProbeResult_Type_name = map[int32]string{
	0: "TCP",
	1: "ICMP",
	2: "TRACEROUTE",
}
var AgentProbeResult_Type_value = map[string]int32{
	"TCP":        0,
	"ICMP":       1,
	"TRACEROUTE": 2,
}

func (x AgentProbeResult_Type) String() string {
	return proto.EnumName(AgentProbeResult_Type_name, int32(x))
}
func (AgentProbeResult_Type) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{13, 0} }

type ControllerMessage_Type int32

const (
	ControllerMessage_AGENT_INFO_REQUEST ControllerMessage_Type = 0
	ControllerMessage_LATENCY_REQUEST    ControllerMessage_Type = 1
)

var ControllerMessage_Type_name = map[int32]string{
	0: "AGENT_INFO_REQUEST",
	1: "LATENCY_REQUEST",
}
var ControllerMessage_Type_value = map[string]int32{
	"AGENT_INFO_REQUEST": 0,
	"LATENCY_REQUEST":    1,
}

func (x ControllerMessage_Type) String() string {
	return proto.EnumName(ControllerMessage_Type_name, int32(x))
}
func (ControllerMessage_Type) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{14, 0} }

type LatencyRequest_Type int32

const (
	LatencyRequest_TCP        LatencyRequest_Type = 0
	LatencyRequest_ICMP       LatencyRequest_Type = 1
	LatencyRequest_TRACEROUTE LatencyRequest_Type = 2
)

var LatencyRequest_Type_name = map[int32]string{
	0: "TCP",
	1: "ICMP",
	2: "TRACEROUTE",
}
var LatencyRequest_Type_value = map[string]int32{
	"TCP":        0,
	"ICMP":       1,
	"TRACEROUTE": 2,
}

func (x LatencyRequest_Type) String() string {
	return proto.EnumName(LatencyRequest_Type_name, int32(x))
}
func (LatencyRequest_Type) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{15, 0} }

type Empty struct {
}

func (m *Empty) Reset()                    { *m = Empty{} }
func (m *Empty) String() string            { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()               {}
func (*Empty) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type ControllerInfoResponse struct {
	Version         string `protobuf:"bytes,1,opt,name=version" json:"version,omitempty"`
	ConnectedAgents int32  `protobuf:"varint,2,opt,name=connectedAgents" json:"connectedAgents,omitempty"`
}

func (m *ControllerInfoResponse) Reset()                    { *m = ControllerInfoResponse{} }
func (m *ControllerInfoResponse) String() string            { return proto.CompactTextString(m) }
func (*ControllerInfoResponse) ProtoMessage()               {}
func (*ControllerInfoResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *ControllerInfoResponse) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *ControllerInfoResponse) GetConnectedAgents() int32 {
	if m != nil {
		return m.ConnectedAgents
	}
	return 0
}

type AgentRequest struct {
	AgentId string `protobuf:"bytes,1,opt,name=agentId" json:"agentId,omitempty"`
}

func (m *AgentRequest) Reset()                    { *m = AgentRequest{} }
func (m *AgentRequest) String() string            { return proto.CompactTextString(m) }
func (*AgentRequest) ProtoMessage()               {}
func (*AgentRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *AgentRequest) GetAgentId() string {
	if m != nil {
		return m.AgentId
	}
	return ""
}

type AgentResponse struct {
	Agents map[string]*AgentInfo `protobuf:"bytes,1,rep,name=agents" json:"agents,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *AgentResponse) Reset()                    { *m = AgentResponse{} }
func (m *AgentResponse) String() string            { return proto.CompactTextString(m) }
func (*AgentResponse) ProtoMessage()               {}
func (*AgentResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *AgentResponse) GetAgents() map[string]*AgentInfo {
	if m != nil {
		return m.Agents
	}
	return nil
}

type ProbeRequest struct {
	AgentId        string          `protobuf:"bytes,1,opt,name=agentId" json:"agentId,omitempty"`
	LatencyRequest *LatencyRequest `protobuf:"bytes,2,opt,name=latencyRequest" json:"latencyRequest,omitempty"`
}

func (m *ProbeRequest) Reset()                    { *m = ProbeRequest{} }
func (m *ProbeRequest) String() string            { return proto.CompactTextString(m) }
func (*ProbeRequest) ProtoMessage()               {}
func (*ProbeRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *ProbeRequest) GetAgentId() string {
	if m != nil {
		return m.AgentId
	}
	return ""
}

func (m *ProbeRequest) GetLatencyRequest() *LatencyRequest {
	if m != nil {
		return m.LatencyRequest
	}
	return nil
}

type ProbeResponse struct {
	Result *AgentProbeResult `protobuf:"bytes,1,opt,name=result" json:"result,omitempty"`
}

func (m *ProbeResponse) Reset()                    { *m = ProbeResponse{} }
func (m *ProbeResponse) String() string            { return proto.CompactTextString(m) }
func (*ProbeResponse) ProtoMessage()               {}
func (*ProbeResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *ProbeResponse) GetResult() *AgentProbeResult {
	if m != nil {
		return m.Result
	}
	return nil
}

type CreateResultQueueRequest struct {
	ClientId string `protobuf:"bytes,1,opt,name=clientId" json:"clientId,omitempty"`
}

func (m *CreateResultQueueRequest) Reset()                    { *m = CreateResultQueueRequest{} }
func (m *CreateResultQueueRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateResultQueueRequest) ProtoMessage()               {}
func (*CreateResultQueueRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *CreateResultQueueRequest) GetClientId() string {
	if m != nil {
		return m.ClientId
	}
	return ""
}

type CreateResultQueueResponse struct {
	ClientId string             `protobuf:"bytes,1,opt,name=clientId" json:"clientId,omitempty"`
	Config   *ResultQueueConfig `protobuf:"bytes,2,opt,name=config" json:"config,omitempty"`
}

func (m *CreateResultQueueResponse) Reset()                    { *m = CreateResultQueueResponse{} }
func (m *CreateResultQueueResponse) String() string            { return proto.CompactTextString(m) }
func (*CreateResultQueueResponse) ProtoMessage()               {}
func (*CreateResultQueueResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *CreateResultQueueResponse) GetClientId() string {
	if m != nil {
		return m.ClientId
	}
	return ""
}

func (m *CreateResultQueueResponse) GetConfig() *ResultQueueConfig {
	if m != nil {
		return m.Config
	}
	return nil
}

type ScheduleProbeRequest struct {
	ClientId       string             `protobuf:"bytes,1,opt,name=clientId" json:"clientId,omitempty"`
	LatencyRequest *LatencyRequest    `protobuf:"bytes,2,opt,name=latencyRequest" json:"latencyRequest,omitempty"`
	ResultConfig   *ResultQueueConfig `protobuf:"bytes,3,opt,name=resultConfig" json:"resultConfig,omitempty"`
	Schedule       *ProbeSchedule     `protobuf:"bytes,4,opt,name=schedule" json:"schedule,omitempty"`
}

func (m *ScheduleProbeRequest) Reset()                    { *m = ScheduleProbeRequest{} }
func (m *ScheduleProbeRequest) String() string            { return proto.CompactTextString(m) }
func (*ScheduleProbeRequest) ProtoMessage()               {}
func (*ScheduleProbeRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *ScheduleProbeRequest) GetClientId() string {
	if m != nil {
		return m.ClientId
	}
	return ""
}

func (m *ScheduleProbeRequest) GetLatencyRequest() *LatencyRequest {
	if m != nil {
		return m.LatencyRequest
	}
	return nil
}

func (m *ScheduleProbeRequest) GetResultConfig() *ResultQueueConfig {
	if m != nil {
		return m.ResultConfig
	}
	return nil
}

func (m *ScheduleProbeRequest) GetSchedule() *ProbeSchedule {
	if m != nil {
		return m.Schedule
	}
	return nil
}

type ScheduleProbeResponse struct {
	ScheduleId string `protobuf:"bytes,1,opt,name=scheduleId" json:"scheduleId,omitempty"`
}

func (m *ScheduleProbeResponse) Reset()                    { *m = ScheduleProbeResponse{} }
func (m *ScheduleProbeResponse) String() string            { return proto.CompactTextString(m) }
func (*ScheduleProbeResponse) ProtoMessage()               {}
func (*ScheduleProbeResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *ScheduleProbeResponse) GetScheduleId() string {
	if m != nil {
		return m.ScheduleId
	}
	return ""
}

type ResultQueueConfig struct {
	QueueConfigId string `protobuf:"bytes,1,opt,name=queueConfigId" json:"queueConfigId,omitempty"`
	QueueURL      string `protobuf:"bytes,2,opt,name=queueURL" json:"queueURL,omitempty"`
	QueueChannel  string `protobuf:"bytes,3,opt,name=queueChannel" json:"queueChannel,omitempty"`
}

func (m *ResultQueueConfig) Reset()                    { *m = ResultQueueConfig{} }
func (m *ResultQueueConfig) String() string            { return proto.CompactTextString(m) }
func (*ResultQueueConfig) ProtoMessage()               {}
func (*ResultQueueConfig) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *ResultQueueConfig) GetQueueConfigId() string {
	if m != nil {
		return m.QueueConfigId
	}
	return ""
}

func (m *ResultQueueConfig) GetQueueURL() string {
	if m != nil {
		return m.QueueURL
	}
	return ""
}

func (m *ResultQueueConfig) GetQueueChannel() string {
	if m != nil {
		return m.QueueChannel
	}
	return ""
}

type AgentMessage struct {
	Type   AgentMessage_Type `protobuf:"varint,1,opt,name=type,enum=messages.AgentMessage_Type" json:"type,omitempty"`
	Id     string            `protobuf:"bytes,2,opt,name=id" json:"id,omitempty"`
	Auth   string            `protobuf:"bytes,3,opt,name=auth" json:"auth,omitempty"`
	Result *AgentProbeResult `protobuf:"bytes,4,opt,name=result" json:"result,omitempty"`
	Info   *AgentInfo        `protobuf:"bytes,5,opt,name=info" json:"info,omitempty"`
}

func (m *AgentMessage) Reset()                    { *m = AgentMessage{} }
func (m *AgentMessage) String() string            { return proto.CompactTextString(m) }
func (*AgentMessage) ProtoMessage()               {}
func (*AgentMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *AgentMessage) GetType() AgentMessage_Type {
	if m != nil {
		return m.Type
	}
	return AgentMessage_HELLO
}

func (m *AgentMessage) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *AgentMessage) GetAuth() string {
	if m != nil {
		return m.Auth
	}
	return ""
}

func (m *AgentMessage) GetResult() *AgentProbeResult {
	if m != nil {
		return m.Result
	}
	return nil
}

func (m *AgentMessage) GetInfo() *AgentInfo {
	if m != nil {
		return m.Info
	}
	return nil
}

type AgentInfo struct {
	Os           string `protobuf:"bytes,1,opt,name=os" json:"os,omitempty"`
	Hostname     string `protobuf:"bytes,2,opt,name=hostname" json:"hostname,omitempty"`
	AgentVersion string `protobuf:"bytes,3,opt,name=agentVersion" json:"agentVersion,omitempty"`
	Ipaddress    string `protobuf:"bytes,4,opt,name=ipaddress" json:"ipaddress,omitempty"`
	Label        string `protobuf:"bytes,5,opt,name=label" json:"label,omitempty"`
	Location     string `protobuf:"bytes,6,opt,name=location" json:"location,omitempty"`
}

func (m *AgentInfo) Reset()                    { *m = AgentInfo{} }
func (m *AgentInfo) String() string            { return proto.CompactTextString(m) }
func (*AgentInfo) ProtoMessage()               {}
func (*AgentInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *AgentInfo) GetOs() string {
	if m != nil {
		return m.Os
	}
	return ""
}

func (m *AgentInfo) GetHostname() string {
	if m != nil {
		return m.Hostname
	}
	return ""
}

func (m *AgentInfo) GetAgentVersion() string {
	if m != nil {
		return m.AgentVersion
	}
	return ""
}

func (m *AgentInfo) GetIpaddress() string {
	if m != nil {
		return m.Ipaddress
	}
	return ""
}

func (m *AgentInfo) GetLabel() string {
	if m != nil {
		return m.Label
	}
	return ""
}

func (m *AgentInfo) GetLocation() string {
	if m != nil {
		return m.Location
	}
	return ""
}

type AgentProbeResult struct {
	Type         AgentProbeResult_Type `protobuf:"varint,1,opt,name=type,enum=messages.AgentProbeResult_Type" json:"type,omitempty"`
	ResultId     string                `protobuf:"bytes,2,opt,name=resultId" json:"resultId,omitempty"`
	Host         string                `protobuf:"bytes,3,opt,name=host" json:"host,omitempty"`
	ProbeId      string                `protobuf:"bytes,4,opt,name=probeId" json:"probeId,omitempty"`
	Timestamp    int64                 `protobuf:"varint,5,opt,name=timestamp" json:"timestamp,omitempty"`
	Data         []byte                `protobuf:"bytes,6,opt,name=data,proto3" json:"data,omitempty"`
	Error        bool                  `protobuf:"varint,7,opt,name=error" json:"error,omitempty"`
	ErrorMessage string                `protobuf:"bytes,8,opt,name=errorMessage" json:"errorMessage,omitempty"`
}

func (m *AgentProbeResult) Reset()                    { *m = AgentProbeResult{} }
func (m *AgentProbeResult) String() string            { return proto.CompactTextString(m) }
func (*AgentProbeResult) ProtoMessage()               {}
func (*AgentProbeResult) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

func (m *AgentProbeResult) GetType() AgentProbeResult_Type {
	if m != nil {
		return m.Type
	}
	return AgentProbeResult_TCP
}

func (m *AgentProbeResult) GetResultId() string {
	if m != nil {
		return m.ResultId
	}
	return ""
}

func (m *AgentProbeResult) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

func (m *AgentProbeResult) GetProbeId() string {
	if m != nil {
		return m.ProbeId
	}
	return ""
}

func (m *AgentProbeResult) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *AgentProbeResult) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *AgentProbeResult) GetError() bool {
	if m != nil {
		return m.Error
	}
	return false
}

func (m *AgentProbeResult) GetErrorMessage() string {
	if m != nil {
		return m.ErrorMessage
	}
	return ""
}

type ControllerMessage struct {
	Type           ControllerMessage_Type `protobuf:"varint,1,opt,name=type,enum=messages.ControllerMessage_Type" json:"type,omitempty"`
	LatencyRequest *LatencyRequest        `protobuf:"bytes,2,opt,name=latencyRequest" json:"latencyRequest,omitempty"`
}

func (m *ControllerMessage) Reset()                    { *m = ControllerMessage{} }
func (m *ControllerMessage) String() string            { return proto.CompactTextString(m) }
func (*ControllerMessage) ProtoMessage()               {}
func (*ControllerMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

func (m *ControllerMessage) GetType() ControllerMessage_Type {
	if m != nil {
		return m.Type
	}
	return ControllerMessage_AGENT_INFO_REQUEST
}

func (m *ControllerMessage) GetLatencyRequest() *LatencyRequest {
	if m != nil {
		return m.LatencyRequest
	}
	return nil
}

type LatencyRequest struct {
	Type       LatencyRequest_Type `protobuf:"varint,1,opt,name=type,enum=messages.LatencyRequest_Type" json:"type,omitempty"`
	ResultId   string              `protobuf:"bytes,2,opt,name=resultId" json:"resultId,omitempty"`
	Host       string              `protobuf:"bytes,3,opt,name=host" json:"host,omitempty"`
	Parameters map[string]string   `protobuf:"bytes,4,rep,name=parameters" json:"parameters,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *LatencyRequest) Reset()                    { *m = LatencyRequest{} }
func (m *LatencyRequest) String() string            { return proto.CompactTextString(m) }
func (*LatencyRequest) ProtoMessage()               {}
func (*LatencyRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{15} }

func (m *LatencyRequest) GetType() LatencyRequest_Type {
	if m != nil {
		return m.Type
	}
	return LatencyRequest_TCP
}

func (m *LatencyRequest) GetResultId() string {
	if m != nil {
		return m.ResultId
	}
	return ""
}

func (m *LatencyRequest) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

func (m *LatencyRequest) GetParameters() map[string]string {
	if m != nil {
		return m.Parameters
	}
	return nil
}

type ProbeSchedule struct {
	Id     string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Second string `protobuf:"bytes,2,opt,name=second" json:"second,omitempty"`
	Minute string `protobuf:"bytes,3,opt,name=minute" json:"minute,omitempty"`
	Hour   string `protobuf:"bytes,4,opt,name=hour" json:"hour,omitempty"`
	Day    string `protobuf:"bytes,5,opt,name=day" json:"day,omitempty"`
	Month  string `protobuf:"bytes,6,opt,name=month" json:"month,omitempty"`
	Year   string `protobuf:"bytes,7,opt,name=year" json:"year,omitempty"`
}

func (m *ProbeSchedule) Reset()                    { *m = ProbeSchedule{} }
func (m *ProbeSchedule) String() string            { return proto.CompactTextString(m) }
func (*ProbeSchedule) ProtoMessage()               {}
func (*ProbeSchedule) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{16} }

func (m *ProbeSchedule) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ProbeSchedule) GetSecond() string {
	if m != nil {
		return m.Second
	}
	return ""
}

func (m *ProbeSchedule) GetMinute() string {
	if m != nil {
		return m.Minute
	}
	return ""
}

func (m *ProbeSchedule) GetHour() string {
	if m != nil {
		return m.Hour
	}
	return ""
}

func (m *ProbeSchedule) GetDay() string {
	if m != nil {
		return m.Day
	}
	return ""
}

func (m *ProbeSchedule) GetMonth() string {
	if m != nil {
		return m.Month
	}
	return ""
}

func (m *ProbeSchedule) GetYear() string {
	if m != nil {
		return m.Year
	}
	return ""
}

func init() {
	proto.RegisterType((*Empty)(nil), "messages.Empty")
	proto.RegisterType((*ControllerInfoResponse)(nil), "messages.ControllerInfoResponse")
	proto.RegisterType((*AgentRequest)(nil), "messages.AgentRequest")
	proto.RegisterType((*AgentResponse)(nil), "messages.AgentResponse")
	proto.RegisterType((*ProbeRequest)(nil), "messages.ProbeRequest")
	proto.RegisterType((*ProbeResponse)(nil), "messages.ProbeResponse")
	proto.RegisterType((*CreateResultQueueRequest)(nil), "messages.CreateResultQueueRequest")
	proto.RegisterType((*CreateResultQueueResponse)(nil), "messages.CreateResultQueueResponse")
	proto.RegisterType((*ScheduleProbeRequest)(nil), "messages.ScheduleProbeRequest")
	proto.RegisterType((*ScheduleProbeResponse)(nil), "messages.ScheduleProbeResponse")
	proto.RegisterType((*ResultQueueConfig)(nil), "messages.ResultQueueConfig")
	proto.RegisterType((*AgentMessage)(nil), "messages.AgentMessage")
	proto.RegisterType((*AgentInfo)(nil), "messages.AgentInfo")
	proto.RegisterType((*AgentProbeResult)(nil), "messages.AgentProbeResult")
	proto.RegisterType((*ControllerMessage)(nil), "messages.ControllerMessage")
	proto.RegisterType((*LatencyRequest)(nil), "messages.LatencyRequest")
	proto.RegisterType((*ProbeSchedule)(nil), "messages.ProbeSchedule")
	proto.RegisterEnum("messages.AgentMessage_Type", AgentMessage_Type_name, AgentMessage_Type_value)
	proto.RegisterEnum("messages.AgentProbeResult_Type", AgentProbeResult_Type_name, AgentProbeResult_Type_value)
	proto.RegisterEnum("messages.ControllerMessage_Type", ControllerMessage_Type_name, ControllerMessage_Type_value)
	proto.RegisterEnum("messages.LatencyRequest_Type", LatencyRequest_Type_name, LatencyRequest_Type_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Controller service

type ControllerClient interface {
	GetControllerInfo(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*ControllerInfoResponse, error)
	GetAgents(ctx context.Context, in *AgentRequest, opts ...grpc.CallOption) (*AgentResponse, error)
	SendProbe(ctx context.Context, in *ProbeRequest, opts ...grpc.CallOption) (*ProbeResponse, error)
	CreateResultQueue(ctx context.Context, in *CreateResultQueueRequest, opts ...grpc.CallOption) (*CreateResultQueueResponse, error)
	ScheduleProbe(ctx context.Context, in *ScheduleProbeRequest, opts ...grpc.CallOption) (*ScheduleProbeResponse, error)
}

type controllerClient struct {
	cc *grpc.ClientConn
}

func NewControllerClient(cc *grpc.ClientConn) ControllerClient {
	return &controllerClient{cc}
}

func (c *controllerClient) GetControllerInfo(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*ControllerInfoResponse, error) {
	out := new(ControllerInfoResponse)
	err := grpc.Invoke(ctx, "/messages.Controller/GetControllerInfo", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *controllerClient) GetAgents(ctx context.Context, in *AgentRequest, opts ...grpc.CallOption) (*AgentResponse, error) {
	out := new(AgentResponse)
	err := grpc.Invoke(ctx, "/messages.Controller/GetAgents", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *controllerClient) SendProbe(ctx context.Context, in *ProbeRequest, opts ...grpc.CallOption) (*ProbeResponse, error) {
	out := new(ProbeResponse)
	err := grpc.Invoke(ctx, "/messages.Controller/SendProbe", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *controllerClient) CreateResultQueue(ctx context.Context, in *CreateResultQueueRequest, opts ...grpc.CallOption) (*CreateResultQueueResponse, error) {
	out := new(CreateResultQueueResponse)
	err := grpc.Invoke(ctx, "/messages.Controller/CreateResultQueue", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *controllerClient) ScheduleProbe(ctx context.Context, in *ScheduleProbeRequest, opts ...grpc.CallOption) (*ScheduleProbeResponse, error) {
	out := new(ScheduleProbeResponse)
	err := grpc.Invoke(ctx, "/messages.Controller/ScheduleProbe", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Controller service

type ControllerServer interface {
	GetControllerInfo(context.Context, *Empty) (*ControllerInfoResponse, error)
	GetAgents(context.Context, *AgentRequest) (*AgentResponse, error)
	SendProbe(context.Context, *ProbeRequest) (*ProbeResponse, error)
	CreateResultQueue(context.Context, *CreateResultQueueRequest) (*CreateResultQueueResponse, error)
	ScheduleProbe(context.Context, *ScheduleProbeRequest) (*ScheduleProbeResponse, error)
}

func RegisterControllerServer(s *grpc.Server, srv ControllerServer) {
	s.RegisterService(&_Controller_serviceDesc, srv)
}

func _Controller_GetControllerInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ControllerServer).GetControllerInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/messages.Controller/GetControllerInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ControllerServer).GetControllerInfo(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Controller_GetAgents_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AgentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ControllerServer).GetAgents(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/messages.Controller/GetAgents",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ControllerServer).GetAgents(ctx, req.(*AgentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Controller_SendProbe_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ProbeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ControllerServer).SendProbe(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/messages.Controller/SendProbe",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ControllerServer).SendProbe(ctx, req.(*ProbeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Controller_CreateResultQueue_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateResultQueueRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ControllerServer).CreateResultQueue(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/messages.Controller/CreateResultQueue",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ControllerServer).CreateResultQueue(ctx, req.(*CreateResultQueueRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Controller_ScheduleProbe_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ScheduleProbeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ControllerServer).ScheduleProbe(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/messages.Controller/ScheduleProbe",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ControllerServer).ScheduleProbe(ctx, req.(*ScheduleProbeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Controller_serviceDesc = grpc.ServiceDesc{
	ServiceName: "messages.Controller",
	HandlerType: (*ControllerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetControllerInfo",
			Handler:    _Controller_GetControllerInfo_Handler,
		},
		{
			MethodName: "GetAgents",
			Handler:    _Controller_GetAgents_Handler,
		},
		{
			MethodName: "SendProbe",
			Handler:    _Controller_SendProbe_Handler,
		},
		{
			MethodName: "CreateResultQueue",
			Handler:    _Controller_CreateResultQueue_Handler,
		},
		{
			MethodName: "ScheduleProbe",
			Handler:    _Controller_ScheduleProbe_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "messages.proto",
}

func init() { proto.RegisterFile("messages.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 1044 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x56, 0xeb, 0x6e, 0x1b, 0x45,
	0x14, 0xce, 0xfa, 0x16, 0xef, 0x89, 0xe3, 0x38, 0xd3, 0x90, 0x2c, 0x0b, 0xb4, 0xd6, 0x14, 0xa9,
	0xee, 0x9f, 0x20, 0x6c, 0x04, 0x88, 0x8b, 0x20, 0xb2, 0xb6, 0xa9, 0x25, 0x37, 0x71, 0x27, 0x0e,
	0x12, 0x52, 0xa5, 0x6a, 0xe2, 0x9d, 0xc4, 0x86, 0xf5, 0xae, 0xbb, 0x3b, 0x5b, 0xc9, 0xff, 0x78,
	0x10, 0x24, 0x7e, 0x82, 0xc4, 0x4b, 0xf0, 0x3a, 0xf0, 0x14, 0x68, 0x2e, 0x7b, 0xb3, 0xe3, 0x14,
	0x94, 0x7f, 0x73, 0xce, 0x7e, 0xe7, 0xf6, 0x9d, 0xb3, 0x33, 0x07, 0x9a, 0x73, 0x16, 0x45, 0xf4,
	0x86, 0x45, 0xc7, 0x8b, 0x30, 0xe0, 0x01, 0xaa, 0x27, 0x32, 0xde, 0x86, 0xaa, 0x33, 0x5f, 0xf0,
	0x25, 0x7e, 0x05, 0x87, 0xfd, 0xc0, 0xe7, 0x61, 0xe0, 0x79, 0x2c, 0x1c, 0xf8, 0xd7, 0x01, 0x61,
	0xd1, 0x22, 0xf0, 0x23, 0x86, 0x2c, 0xd8, 0x7e, 0xcb, 0xc2, 0x68, 0x16, 0xf8, 0x96, 0xd1, 0x36,
	0x3a, 0x26, 0x49, 0x44, 0xd4, 0x81, 0xbd, 0x49, 0xe0, 0xfb, 0x6c, 0xc2, 0x99, 0x7b, 0x72, 0xc3,
	0x7c, 0x1e, 0x59, 0xa5, 0xb6, 0xd1, 0xa9, 0x92, 0x55, 0x35, 0xee, 0x40, 0x43, 0x9e, 0x08, 0x7b,
	0x13, 0xb3, 0x88, 0x0b, 0x9f, 0x54, 0xc8, 0x03, 0x37, 0xf1, 0xa9, 0x45, 0xfc, 0xab, 0x01, 0xbb,
	0x1a, 0xaa, 0xe3, 0x7f, 0x0d, 0x35, 0xaa, 0x9c, 0x1b, 0xed, 0x72, 0x67, 0xa7, 0xfb, 0xf8, 0x38,
	0xad, 0xa6, 0x00, 0x54, 0x52, 0xe4, 0xf8, 0x3c, 0x5c, 0x12, 0x6d, 0x62, 0x9f, 0xc1, 0x4e, 0x4e,
	0x8d, 0x5a, 0x50, 0xfe, 0x99, 0x2d, 0x75, 0x4c, 0x71, 0x44, 0x4f, 0xa1, 0xfa, 0x96, 0x7a, 0x31,
	0x93, 0x99, 0xef, 0x74, 0x1f, 0xac, 0x38, 0x97, 0x4c, 0x28, 0xc4, 0x57, 0xa5, 0x2f, 0x0d, 0xfc,
	0x13, 0x34, 0x46, 0x61, 0x70, 0xc5, 0xde, 0x59, 0x08, 0xfa, 0x1e, 0x9a, 0x1e, 0xe5, 0xcc, 0x9f,
	0x2c, 0x35, 0x56, 0x47, 0xb0, 0xb2, 0x08, 0xc3, 0xc2, 0x77, 0xb2, 0x82, 0xc7, 0x7d, 0xd8, 0xd5,
	0xb1, 0x34, 0x13, 0x5d, 0xa8, 0x85, 0x2c, 0x8a, 0x3d, 0x2e, 0x63, 0xed, 0x74, 0xed, 0x95, 0x64,
	0x13, 0x74, 0xec, 0x71, 0xa2, 0x91, 0xf8, 0x73, 0xb0, 0xfa, 0x21, 0xa3, 0x5c, 0xeb, 0x5f, 0xc6,
	0x2c, 0x4e, 0x93, 0xb7, 0xa1, 0x3e, 0xf1, 0x66, 0xf9, 0xec, 0x53, 0x19, 0x7b, 0xf0, 0xfe, 0x2d,
	0x76, 0x3a, 0x91, 0x3b, 0x0c, 0x51, 0x0f, 0x6a, 0x93, 0xc0, 0xbf, 0x9e, 0xdd, 0xe8, 0x7a, 0x3f,
	0xc8, 0x92, 0xcc, 0xb9, 0xea, 0x4b, 0x08, 0xd1, 0x50, 0xfc, 0x8f, 0x01, 0x07, 0x17, 0x93, 0x29,
	0x73, 0x63, 0x8f, 0x15, 0xf8, 0xbd, 0x2b, 0xd2, 0xbd, 0x19, 0x46, 0xdf, 0x41, 0x43, 0xd1, 0xa4,
	0xd2, 0xb1, 0xca, 0xef, 0xce, 0xb8, 0x60, 0x80, 0x7a, 0x50, 0x8f, 0x74, 0xda, 0x56, 0x45, 0x1a,
	0x1f, 0x65, 0xc6, 0xb2, 0x90, 0xa4, 0x2a, 0x92, 0x02, 0xf1, 0x17, 0xf0, 0xde, 0x4a, 0xad, 0x9a,
	0xd6, 0x87, 0x00, 0x09, 0x28, 0x2d, 0x37, 0xa7, 0xc1, 0x4b, 0xd8, 0x5f, 0x4b, 0x08, 0x7d, 0x0c,
	0xbb, 0x6f, 0x32, 0x31, 0xb5, 0x2b, 0x2a, 0x05, 0x8f, 0x52, 0x71, 0x49, 0x86, 0x92, 0x25, 0x93,
	0xa4, 0x32, 0xc2, 0xd0, 0x50, 0xe0, 0x29, 0xf5, 0x7d, 0xe6, 0x49, 0x16, 0x4c, 0x52, 0xd0, 0xe1,
	0xbf, 0x0d, 0xfd, 0x07, 0xbf, 0x50, 0xd5, 0xa1, 0x4f, 0xa0, 0xc2, 0x97, 0x0b, 0x26, 0xa3, 0x35,
	0xf3, 0x94, 0xe5, 0x51, 0xc7, 0xe3, 0xe5, 0x82, 0x11, 0x09, 0x44, 0x4d, 0x28, 0xcd, 0x5c, 0x1d,
	0xbb, 0x34, 0x73, 0x11, 0x82, 0x0a, 0x8d, 0xf9, 0x54, 0x47, 0x93, 0xe7, 0xdc, 0x80, 0x57, 0xfe,
	0xeb, 0x80, 0xa3, 0x27, 0x50, 0x99, 0xf9, 0xd7, 0x81, 0x55, 0xdd, 0xfc, 0xff, 0x4a, 0x00, 0x7e,
	0x02, 0x15, 0x91, 0x0e, 0x32, 0xa1, 0xfa, 0xdc, 0x19, 0x0e, 0xcf, 0x5b, 0x5b, 0x08, 0xa0, 0x46,
	0x9c, 0x8b, 0xcb, 0xe1, 0xb8, 0x65, 0xa0, 0x3a, 0x54, 0x06, 0x67, 0xcf, 0xce, 0x5b, 0x25, 0xfc,
	0xa7, 0x01, 0x66, 0x6a, 0x2c, 0xf2, 0x0e, 0x22, 0x4d, 0x6a, 0x29, 0x88, 0x04, 0x93, 0xd3, 0x20,
	0xe2, 0x3e, 0x9d, 0xb3, 0x84, 0xc9, 0x44, 0x16, 0x4c, 0xca, 0xdf, 0xff, 0x07, 0x7d, 0x5f, 0x6a,
	0x26, 0xf3, 0x3a, 0xf4, 0x21, 0x98, 0xb3, 0x05, 0x75, 0xdd, 0x90, 0x45, 0x91, 0x2c, 0xd3, 0x24,
	0x99, 0x02, 0x1d, 0x40, 0xd5, 0xa3, 0x57, 0xcc, 0x93, 0xe5, 0x98, 0x44, 0x09, 0x22, 0xa6, 0x17,
	0x4c, 0x28, 0x17, 0x3e, 0x6b, 0x2a, 0x66, 0x22, 0xe3, 0x3f, 0x4a, 0xd0, 0x5a, 0x25, 0x07, 0xf5,
	0x0a, 0xdd, 0x79, 0xb4, 0x99, 0xc6, 0x7c, 0x87, 0x6c, 0xa8, 0x2b, 0x4e, 0x07, 0x49, 0x9f, 0x52,
	0x59, 0x74, 0x4b, 0x54, 0x99, 0x74, 0x4b, 0x9c, 0xc5, 0xdd, 0xb7, 0x10, 0x9e, 0x06, 0xae, 0xae,
	0x23, 0x11, 0x45, 0x8d, 0x7c, 0x36, 0x67, 0x11, 0xa7, 0xf3, 0x85, 0xac, 0xa4, 0x4c, 0x32, 0x85,
	0xf0, 0xe5, 0x52, 0x4e, 0x65, 0x25, 0x0d, 0x22, 0xcf, 0xa2, 0x6e, 0x16, 0x86, 0x41, 0x68, 0x6d,
	0xb7, 0x8d, 0x4e, 0x9d, 0x28, 0x41, 0xf0, 0x29, 0x0f, 0x7a, 0x9c, 0xac, 0xba, 0xe2, 0x33, 0xaf,
	0xc3, 0x4f, 0x75, 0x5b, 0xb7, 0xa1, 0x3c, 0xee, 0x8f, 0x5a, 0x5b, 0xb2, 0x91, 0xfd, 0x17, 0xa3,
	0x96, 0x81, 0x9a, 0x00, 0x63, 0x72, 0xd2, 0x77, 0xc8, 0xf9, 0xe5, 0xd8, 0x69, 0x95, 0xf0, 0x5f,
	0x06, 0xec, 0x67, 0x8f, 0x5c, 0x32, 0xc9, 0x9f, 0x15, 0xb8, 0x6a, 0x67, 0x5c, 0xad, 0x41, 0xf3,
	0x64, 0xdd, 0xff, 0x7a, 0xef, 0xe9, 0xc4, 0x0f, 0x01, 0x9d, 0x9c, 0x3a, 0x67, 0xe3, 0xd7, 0x62,
	0xfc, 0x5e, 0x13, 0xe7, 0xe5, 0xa5, 0x73, 0x31, 0x6e, 0x6d, 0xa1, 0x07, 0xb0, 0x37, 0x3c, 0x19,
	0x3b, 0x67, 0xfd, 0x1f, 0x53, 0xa5, 0x81, 0x7f, 0x2f, 0x41, 0xb3, 0xe8, 0x17, 0x7d, 0x5a, 0xc8,
	0xff, 0xa3, 0x4d, 0xf1, 0xef, 0xd3, 0xe9, 0xe7, 0x00, 0x0b, 0x1a, 0xd2, 0x39, 0xe3, 0x2c, 0x14,
	0x43, 0x2b, 0x9e, 0xe1, 0xce, 0xc6, 0x40, 0xa3, 0x14, 0xaa, 0xde, 0xe2, 0x9c, 0xad, 0xfd, 0x2d,
	0xec, 0xad, 0x7c, 0xbe, 0xe5, 0x4d, 0x3e, 0xc8, 0xbf, 0xc9, 0x66, 0xfe, 0xf9, 0xfd, 0x1f, 0xcd,
	0xfe, 0xcd, 0xd0, 0xcf, 0x67, 0x72, 0xd7, 0xea, 0x1b, 0xc8, 0x48, 0x6f, 0xa0, 0x43, 0xa8, 0x45,
	0x6c, 0x12, 0xf8, 0x09, 0x07, 0x5a, 0x12, 0xfa, 0xf9, 0xcc, 0x8f, 0x39, 0xd3, 0x1c, 0x68, 0x49,
	0x31, 0x13, 0x87, 0x7a, 0xd8, 0xe5, 0x59, 0x24, 0xef, 0xd2, 0xa5, 0xfe, 0x5b, 0xc5, 0x51, 0x24,
	0x3f, 0x0f, 0x7c, 0x3e, 0xd5, 0x3f, 0xaa, 0x12, 0x84, 0xed, 0x92, 0x51, 0x35, 0xde, 0x26, 0x91,
	0xe7, 0xee, 0x2f, 0x65, 0x80, 0x6c, 0xc6, 0xd0, 0x33, 0xd8, 0x3f, 0x65, 0xbc, 0xb8, 0x84, 0xa1,
	0xbd, 0x8c, 0x65, 0xb9, 0xa7, 0xd9, 0xb7, 0xce, 0x67, 0x61, 0x5f, 0xfb, 0x06, 0xcc, 0x53, 0xc6,
	0xd5, 0xd6, 0x83, 0x0e, 0xd7, 0x96, 0x25, 0xd9, 0x23, 0xfb, 0x68, 0xc3, 0x12, 0x25, 0xac, 0x2f,
	0x98, 0xef, 0x4a, 0xe6, 0xf2, 0xd6, 0xf9, 0x57, 0xd9, 0x3e, 0x5a, 0xd3, 0x6b, 0xeb, 0x57, 0xb0,
	0xbf, 0xb6, 0x35, 0x20, 0x9c, 0x4b, 0x79, 0xc3, 0x2a, 0x62, 0x3f, 0xbe, 0x13, 0xa3, 0xbd, 0x8f,
	0x60, 0xb7, 0xf0, 0x70, 0xa2, 0x87, 0x99, 0xd5, 0x6d, 0xdb, 0x83, 0xfd, 0x68, 0xe3, 0x77, 0xe5,
	0xf1, 0xaa, 0x26, 0xf7, 0xe1, 0xde, 0xbf, 0x01, 0x00, 0x00, 0xff, 0xff, 0xf4, 0xdb, 0x78, 0x65,
	0x21, 0x0b, 0x00, 0x00,
}
