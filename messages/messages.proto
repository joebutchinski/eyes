syntax = "proto3";

package messages;

service Controller {
    rpc GetAgents(AgentRequest) returns (AgentResponse);
    rpc SendProbe(ProbeRequest) returns (ProbeResponse);
    rpc ScheduleProbe(ScheduleProbeRequest) returns (ScheduleProbeResponse);
}

message AgentRequest {
    string id = 1;
}

message AgentResponse {
    map<string,AgentInfo> agents = 1;
}

message ProbeRequest {
    string agentId = 1;
    bool repeat = 2;
    LatencyRequest latencyRequest = 3;
}

message ProbeResponse {
    AgentProbeResult result = 1;
}

message ScheduleProbeRequest{}
message ScheduleProbeResponse{}

message AgentMessage {
    enum Type {
        HELLO = 0;
        RESULT = 1;
        INFO = 2;
    }
    Type type = 1;
    string id = 2;
    string auth = 3;
    AgentProbeResult result = 4;
    AgentInfo info = 5;
}

message AgentInfo {
    string os = 1;
    string hostname = 2;
    string agentVersion = 3;
    string ipaddress = 4;
    string label = 5;
    string location = 6;
}

message AgentProbeResult {
    enum Type {
        TCP = 0;
        ICMP = 1;
        TRACEROUTE = 2;
    }
    Type type = 1;
    string resultId = 2;
    string host = 3;
    string probeId = 4;
    int64 timestamp = 5;
    bytes data = 6;
    bool error = 7;
    string errorMessage = 8;
}

message ControllerMessage {
    enum Type {
        AGENT_INFO_REQUEST = 0;
        LATENCY_REQUEST = 1;
    }
    Type type = 1;
    LatencyRequest latencyRequest = 2;
}

message LatencyRequest {
    enum Type {
        TCP = 0;
        ICMP = 1;
        TRACEROUTE = 2;
    }
    Type type = 1;
    string resultId = 2;
    string host = 3;
    map<string,string> parameters = 4;
}
